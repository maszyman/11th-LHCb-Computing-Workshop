First of all, I would like to thank you for the invitation for this interview and giving me the opportunity to present the highlights of my experience in physics and computer science.

Let me start with the short introduction about myself. My name is Maciej Szymański, I come from Poland. I am a PhD student in Nuclear Physics at Warsaw University of Technology since 2012. My primary research topic concerns A Large Ion Collider Experiment at Large Hadron Collider. In February 2016 I have submitted my thesis titled "Femtoscopic analysis of baryon correlations in ultra-relativistic heavy-ion collisions registered by ALICE". I have already passed my doctoral exams and currently I am waiting for the public defense which is expected to occur in coming weeks. I would like to emphasise that my work in High Energy Physics has started already a bit earlier, while I was undergraduate student working on amongst others monte-carlo simualation of collisions. I wish to mention also that I hold the engineer degree in computer science obtained at Faculty of electronics and information technology, also at Warsaw University of Technology.

I am going to start my talk presenting main concepts of my PHD thesis just to give you the idea about my research. I have performed Femtoscopic analysis with baryon pairs measured in Pb–Pb collisions at the centre-of-mass collision energy per nucleon √pair s NN =2.76 TeV collected by ALICE. The goal was to study the transverse mass dependence of the so-called femtoscopic radii to verify the hydrodynamic behaviour of the system created in HIC. Another part of my work was related with the so-called residual correlations phenomenon. I developed and implemented the formalism to study this effect which in turn enabled to estimate the parameters of strong interaction for baryon-antibaryon pairs.

Femtoscopy is the method of particle correlations used for characterisation of the source emitting particles created in collision. In addition, correlations with baryons are especially useful for measuring parameters of the strong interactions which are poorly known for numerous systems. The idea of femtoscopic measurements is based on KP equation. At first, We measure the correlation function in terms of the relative momentum for the given pair type. Then if we know the pair wave function for such pair (which encodes the information about Final State Interactions and QS effects) we can learn about the source function (for example measure the size). Otherwise we are able to extract FSI parameters under several assumptions. Examples of the correlation functions are given on the slide for pbarpbar where the correlation effect is due to the interplay of Fermi Dirac statistics, Coulomb repulsion and strong interaction and for pbar lambda where the strong interaction is the only source of the correlation.

I was doing my measurements with the ALICE detector, shown on the slide, making use of PbPb runs at the LHC. In my analysis, I was using mainly the following detectors: ITS, TPC, TOF, VZERO scintillators. In particular, I was working on particle identification algorithms. Performance plots from TPC and TOF are shown on the slide showing the good separation between different particle species.

The major outcome of this analysis was the transverse mass dependence of the femtoscopic radii obtained for pairs of identical pions, neutral and charged kaons, and protons. The universal decrease of radii with increasing mT shown on the figure is a signature of the collective radial flow present in the medium created in the collision and is well described by hydrodynamic models.

However, in femtoscopy we can go beyond the estimates of size of the source emitting particles. In particular this analysis gives insight into parameters of strong interaction. In fact Strong interaction in a two-baryon system is fundamental problem in Quantum Chromodynamics, especially for baryon-antibaryon pairs. The caveat in such measurements is the presence of residual correlations, that is  phenomenon arising due to the femtoscopic correlations of the parent particles, produced directly in the collision which decay to the particles registered in the detector. I developed the formalism for dealing with such effect and implemented it into the universal software package (ROOT, C++) which as a result allowed to put constraints on the strong interaction parameters for instance for proton antilambda sytem.

So far I have been talking mostly about physics, but now I would like to emphasise the technial aspects of my work. The physics analysis which I presented required naturally a lot of developemnt of the AliRoot that is ALICE software framework, in particular its AliFemto package. AliRoot uses the ROOT system as a foundation on which the framework for simulation, reconstruction and analysis is built. AliRoot is based on the Object Oriented programming paradigm, and is written in C++. The general workflow of the femtoscopic analysis in AliFemto package is the following: first, we obtain the event and decide if it meets the selection criteria, then we choose particles of interest (which means PID, relevant kinematic variables) and forms two types of pairs of particles: the first one from the same, current event (this is signal for which femtoscopic correlation is present) and the second type are the pairs of particles coming from two different events (which is the background distribution used to cancel out remaining global correlations). Then, one calculates relative momentum for those pairs and increments signal and background histograms. Finally, The correlation function is obtained as ratio of signal and background distributions. What is more, my work included implementation of numerical methods, such as solving the optimisation problem, interpolation, numerical integration and Monte Carlo methods. I hold the commit rights for the software repository of the Femtoscopy Physics Analysis Group which was stored initially in SVN, and later in Git, hence I have experience in using both of these version control systems. I was responsible for intergrating the code of physicist from my group into AliRoot and I was working as some kind of the interface between physicists and computer scientists. Therefore, I believe I can say that I understand the expectations of physicists using the software framework and I am aware of the need of the proper maintanece of the code. Furthermore, I have the experience with performing the event simulations in Monte Carlo models. Significant part of my computations was done using GRID computing facilities. Moreover, I was taking part in data taking in ALICE operating Data Acquisition, Trigger, Data Quality Monitoring and Offline systems.

However, my main work related with computing during my PhD was the development of the current Event Display framework in ALICE. The goal was to improve the stability of the existing system and its memory management. Valgrind was the main tool that I used for this task. Secondly, my job was to implement several features related with contolling the GUI. Thanks to this I learned ZeroMQ library. AliEVE is a tool to visualise collisions in ALICE, based on ROOT, in particular its GUI classes. It allows for displaying the detector geometry, online visualisation of currently recorded events (using the simplified offline reconstruction algorithm), displaying events from High Level Trigger and offline events. The examples of features provided by AliEve are 3D view and 2D projections, visualisation of tracks, V 0 ’s, etc., bookmarking interesting events,  Easy navigation between events, intuitive interface for manipulating the appearance such as color coding corresponding to PID, and Screen-shots.  AliEVE was found to be extremely useful tool, especially for outreach activities to attractively present the high energy collisions but also  for experts in ALICE Run Control Centre as sanity check of collected data and for scientists to deepen the understanding of the phenomena occurring in high energy collisions.

Here you can see the example of the visualisation of PbPb collision at 5TeV obtained in AliEVE from November 2015.

I have mentioned in the beginning that I have also engineer degree in computer science. It was obtained at Faculty of Electronics and Information Technology at Warsaw University of Technology  which is considered to be the one of the leading IT institutes in Poland. My diploma thesis concerned Model predictive control algorithms based on neural models in state space. I implemented and benchmarked several model predictive control algorithms in Matlab environment. The main result was that algorithms using neural models to simulate the nonlinear processes are computationally much more efficient compared with standard approach with nonlinear optimisation, while still providing good quality control. The structure of the algorithm making use of neural networks is shown on the left. For the desired output of the process, the neural model is used to predict the future behaviour of the process based on current control variables which enables to reduce the nonlinear optimisation problem to quadratic programming task which is relatively easy to solve. Such algorithms are used in chemical, food, motor industries, also in medicine and aerospace.

My another experience in software development concerns the System of Studies Management at Faculty of Physics at WUT. I designed, developed and was maintaining this system. That was performed making use of .NET technology, Visual Basic programming language, and Microsoft SQL Server database. The system enables for managing the program of studies for each student (which means all things related with classes, grades, protocols, etc.), grading of students work for lecturers, for deanery providing general information for students reagarding faculty as well as current news for students (personalised or not).

Furthermore, I wish to mention few other examples where I gained experience in computer science. First of all, as a PhD student I had teaching obligations at my home institute. I was teaching classes related mainly with computing such as modelling of nuclear processes in Geant and Fortran. I gave a lecture concerning data processing in ALICE. Next, I was a tutor at laboratory classes on Computer Networks teaching for example LINUX installation, bash scripts, sockets, basic network services. What is more, I was teaching the programming in C++ and computer analysis of experimental data in ROOT. I was also the supervisor of the student working on the optimisation of lambda baryon identification. Furthermore, I was in the team developing the  database in PostgreSQL to handle the organisation of the International Conference on New Frontiers in Physics. Finally, I would like to mention several topics which I have contact with while working on student projects. That includes databases (Oracle, MySQL), scripts (bash, Perl,Python), genetic algorithms, simulations of physics phenomena in C++ and Java (Ising Model, Compton effect, Schroedinger equation, hydrogen atom), robotics,  programming of micrcontrollers, and software engineering.

To summarise, I have to admit that my work as a PhD was rather physics-oriented, but computing was inevitable part of it. I think My strength is the experience as a user of the software framework in large scientific experiment and good combination of skills in computing and physics. I find working at the  interface of physics and computing  fascinating since computing serving science faces the exceptional challenges and such work leads to progress of the fundamental sciences. I am willing to learn new things, and pursue new challenges to have a broader view of modern science. I consider this postdoctoral position as a unique opportunity to meet my career plan.
